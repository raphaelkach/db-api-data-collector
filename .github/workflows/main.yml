name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '*/10 * * * *'  # Every 10 minutes
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
            **/site-packages
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"
          poetry --version

      - name: Install dependencies
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          poetry install --no-interaction --no-ansi

      - name: Linting with flake8
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          poetry run flake8 .

      - name: Run tests
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          poetry run pytest

  collect-data:
    needs: build-and-test
    if: github.repository_owner == 'raphaelkach'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
            **/site-packages
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | POETRY_VERSION=1.4.2 python3 -
          export PATH="$HOME/.local/bin:$PATH"
          poetry --version

      - name: Install dependencies
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          poetry install --no-interaction --no-ansi

      - name: Run script
        env:
          DB_CLIENT_ID: ${{ secrets.DB_CLIENT_ID }}
          DB_API_KEY: ${{ secrets.DB_API_KEY }}
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          poetry run python main.py

      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: 'Automated data collection update'
          file_pattern: |
            01_data/01_raw/API/*
            01_data/01_raw/API/logs/*

env:
  FORCE_JAVASCRIPT_ACTIONS_TO_NODE20: true